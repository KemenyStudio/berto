name: Build and Release Electron Apps

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
        
    - name: Checkout LFS objects
      run: git lfs checkout
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Next.js app
      env:
        ELECTRON_BUILD: true
      run: |
        npm run build
        
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        npm run build-electron -- --win
        
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        npm run build-electron -- --mac
        
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm run build-electron -- --linux
        
    - name: Setup LFS and upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p public/downloads
        cp dist/*.exe public/downloads/berto-windows.exe
        git lfs track "public/downloads/*.exe"
        git add public/downloads/berto-windows.exe
        
    - name: Setup LFS and upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p public/downloads
        cp dist/*.dmg public/downloads/berto-mac.dmg
        git lfs track "public/downloads/*.dmg"
        git add public/downloads/berto-mac.dmg
        
    - name: Setup LFS and upload artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p public/downloads
        cp dist/*.AppImage public/downloads/berto-linux.AppImage
        git lfs track "public/downloads/*.AppImage"
        git add public/downloads/berto-linux.AppImage
        
    - name: Commit LFS files
      if: github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .gitattributes
        git diff --staged --quiet || git commit -m "Update Electron builds for ${{ matrix.os }}"
        git push
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-${{ matrix.os }}
        path: dist/
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          electron-windows-latest/**/*.exe
          electron-macos-latest/**/*.dmg
          electron-ubuntu-latest/**/*.AppImage
        generate_release_notes: true 